apply plugin: 'com.android.application'android {    compileSdkVersion rootProject.ext.android.compileSdkVersion    buildToolsVersion rootProject.ext.android.buildToolsVersion    useLibrary 'org.apache.http.legacy'    defaultConfig {        applicationId "com.nxt.net.baseapp"        minSdkVersion rootProject.ext.android.minSdkVersion        targetSdkVersion rootProject.ext.android.targetSdkVersion        versionCode 2        versionName "1.0.1"        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"        multiDexEnabled true        flavorDimensions "versionCode"        javaCompileOptions {            annotationProcessorOptions {                arguments = [ moduleName : project.getName() ]                //gradle3.0.0报错 加入下面代码                annotationProcessorOptions { includeCompileClasspath = true }            }        }    }    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。    lintOptions {        checkReleaseBuilds false        // Or, if you prefer, you can continue to check for errors in release builds,        // but continue the build even when errors are found:        abortOnError false    }    //lambda    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_8        targetCompatibility JavaVersion.VERSION_1_8    }    signingConfigs {        debug {            storeFile file('D:/AKeytool/common.jks')            storePassword "123456"            keyAlias "5"            keyPassword "123456"        }        release {            storeFile file('D:/AKeytool/common.jks')            storePassword "123456"            keyAlias "5"            keyPassword "123456"        }    }    buildTypes {        debug {            // 显示Log            buildConfigField "boolean", "LOG_DEBUG", "true"            buildConfigField "boolean", "USE_CANARY", "true"            versionNameSuffix "-debug"            minifyEnabled false            zipAlignEnabled false            shrinkResources false            signingConfig signingConfigs.debug        }        release {            // 不显示Log            buildConfigField "boolean", "LOG_DEBUG", "false"            buildConfigField "boolean", "USE_CANARY", "false"            //混淆            minifyEnabled false            //Zipalign优化            zipAlignEnabled true            // 移除无用的resource文件//            shrinkResources true            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'            //签名            signingConfig signingConfigs.release            applicationVariants.all { variant ->                variant.outputs.all { output ->                    def apkName = "yns_v${defaultConfig.versionName}_${variant.productFlavors[0].name}"                    if (variant.buildType.name == ('release')) {                        apkName += '.apk'                    } else if (variant.buildType.name == ('debug')) {                        apkName += '_debug.apk'                    }                    def file = new File(apkName)                    outputFileName = file                }            }        }        //渠道Flavors，配置不同风格的app,友盟渠道统计时用到        productFlavors {            "nxt" {}            "offical" {}            "360" {}            yingyongbao {}            wandoujia {}            baidu {}            "91" {}        }    }    lintOptions {        disable 'InvalidPackage'        disable "ResourceType"        abortOnError false    }    packagingOptions {        exclude 'META-INF/NOTICE'        exclude 'META-INF/NOTICE.txt'        exclude 'META-INF/LICENSE'        exclude 'META-INF/LICENSE.txt'        exclude 'META-INF/rxjava.properties'    }    dataBinding {        enabled = true    }}dependencies {    compile fileTree(include: ['*.jar'], dir: 'libs')    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {        exclude group: 'com.android.support', module: 'support-annotations'    })    compile rootProject.ext.dependencies["mvp-arms"]    //support    compile rootProject.ext.dependencies["appcompat-v7"]    compile rootProject.ext.dependencies["design"]    compile rootProject.ext.dependencies["cardview-v7"]    //network    compile rootProject.ext.dependencies["okgo"]    compile rootProject.ext.dependencies["retrofit"]    compile rootProject.ext.dependencies["retrofit-converter-gson"]    compile rootProject.ext.dependencies["retrofit-adapter-rxjava"]    compile rootProject.ext.dependencies["retrofit-converter-scalars"]    //img    compile rootProject.ext.dependencies["glide"]    compile rootProject.ext.dependencies["glide-loader-okhttp3"]    //tool    provided rootProject.ext.dependencies["javax.annotation"]    compile rootProject.ext.dependencies["dagger2"]    annotationProcessor(rootProject.ext.dependencies["dagger2-compiler"]) {        exclude module: 'dagger'    }    compile  rootProject.ext.dependencies["arouter"]    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]    compile rootProject.ext.dependencies["progressmanager"]    compile rootProject.ext.dependencies["retrofit-url-manager"]    compile rootProject.ext.dependencies["gson"]    compile rootProject.ext.dependencies["multidex"]    compile rootProject.ext.dependencies["klog"]    compile rootProject.ext.dependencies["logger"]    compile rootProject.ext.dependencies["eventbus"]    compile rootProject.ext.dependencies["litepal"]    compile rootProject.ext.dependencies["firebase-core"]    compile rootProject.ext.dependencies["firebase-crash"]    //rx    compile rootProject.ext.dependencies["rxjava"]    compile rootProject.ext.dependencies["rxandroid"]    //view    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {        exclude module: 'support-annotations'        exclude module: 'butterknife-annotations'    }    compile rootProject.ext.dependencies["kenburnsview"]    compile rootProject.ext.dependencies["roundedimageview"]    compile rootProject.ext.dependencies["viewpagerindicator"]    compile rootProject.ext.dependencies["ultimatebar"]    compile rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]    compile rootProject.ext.dependencies["SlideCloseLib"]    //test    testCompile rootProject.ext.dependencies["junit"]    debugCompile rootProject.ext.dependencies["canary-debug"]    releaseCompile rootProject.ext.dependencies["canary-release"]    testCompile rootProject.ext.dependencies["canary-release"]    compile project(':magicasakura')    compile project(':mjlibrary')}apply plugin: 'com.google.gms.google-services'
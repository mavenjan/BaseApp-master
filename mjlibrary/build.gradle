apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"

        flavorDimensions "versionCode"
    }

    signingConfigs {
        debug {
            storeFile file('D:/AKeytool/common.jks')
            storePassword "123456"
            keyAlias "5"
            keyPassword "123456"

        }
        release {
            storeFile file('D:/AKeytool/common.jks')
            storePassword "123456"
            keyAlias "5"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            //混淆
            minifyEnabled false
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明，后一个文件是自己的定义混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release

//            applicationVariants.all { variant ->
//                variant.outputs.all { output ->
//                    def apkName = "yns_v${defaultConfig.versionName}_${variant.productFlavors[0].name}"
//                    if (variant.buildType.name == ('release')) {
//                        apkName += '.apk'
//                    } else if (variant.buildType.name == ('debug')) {
//                        apkName += '_debug.apk'
//                    }
//                    def file = new File(apkName)
//                    outputFileName = file
//                }
//            }
        }

        //渠道Flavors，配置不同风格的app,友盟渠道统计时用到
        productFlavors {
            "nxt" {}
            "offical" {}
            "360" {}
            yingyongbao {}
            wandoujia {}
            baidu {}
            "91" {}
        }
    }


    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //base
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["annotations"]
    compile "com.android.support.constraint:constraint-layout:1.0.2"

    //tool
    compile rootProject.ext.dependencies["klog"]

    //network
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["okgo"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    compile rootProject.ext.dependencies["retrofit-converter-scalars"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-loader-okhttp3"]

    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'

    compile rootProject.ext.dependencies["gson"]

    //di
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]


}
